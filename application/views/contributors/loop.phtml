<?php $this->page_title = isset($loop->id) ? 'Edit Loop' : 'Create Loop'; ?>

<script type="text/javascript">
var DIRECTIONS_LINE       = null;
var DIRECTIONS_LINE_STYLE = { color:"#0000FF", weight:5, opacity:0.80, clickable:false };
var ROUGHCUT_LINE         = null;
var ROUGHCUT_LINE_STYLE   = { color: "#FFFFFF", weight:5, opacity:0.5, clickable:false };

var MARKERS = { 'wp0':null, 'wp1':null, 'wp2':null, 'wp3':null, 'wp4':null, 'wp5':null, 'wp6':null, 'wp7':null, 'wp8':null, 'wp9':null };
var ICONS = {
    'wp0' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp0.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp1' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp1.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp2' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp2.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp3' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp3.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp4' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp4.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp5' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp5.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp6' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp6.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp7' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp7.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp8' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp8.png") ?>', iconSize:[20,34], iconAnchor:[10,34] }),
    'wp9' : L.icon({ iconUrl: '<?= ssl_url("static/contributors/wp9.png") ?>', iconSize:[20,34], iconAnchor:[10,34] })
};




$(window).load(function () {

/////
///// load the map, bare bones with layers but not much else
/////
initContributorMap();

// our version of a WMS GetFeatureInfo control: a map click calls query.php to get JSON info, and we construct a bubble
MAP.on('contextmenu', function (event) {

    var data = {};

    // buffer the click point a little to make a box
    var sw = MAP.layerPointToLatLng(new L.Point(event.layerPoint.x - 15 , event.layerPoint.y - 15));
    var ne = MAP.layerPointToLatLng(new L.Point(event.layerPoint.x + 15 , event.layerPoint.y + 15));
    data.w = sw.lng;
    data.s = sw.lat;
    data.e = ne.lng;
    data.n = ne.lat;
    data.zoom = MAP.getZoom();
    var anchor = new L.LatLng(event.latlng.lat,event.latlng.lng);

    // do the AJAX thing
    $.get('../../ajax/query', data, function (html) {
        if (!html) return;
        var popup = new L.Popup();
        popup.setLatLng(anchor);
        popup.setContent(html);
        MAP.openPopup(popup);
    }, 'html');
});



/////
///// enable TinyMCE on the description editor
/////
$('textarea[name="description"]').tinymce({
    // Location of TinyMCE script
    script_url : '<?= ssl_url('static/tinymce/jscripts/tiny_mce/tiny_mce.js') ?>',

    // General options
    theme : "advanced",
    plugins : "autolink,lists,pagebreak,style,layer,table,save,advhr,advimage,advlink,emotions,iespell,inlinepopups,insertdatetime,preview,media,searchreplace,print,contextmenu,paste,directionality,fullscreen,noneditable,visualchars,nonbreaking,xhtmlxtras,template,advlist",

    // Reduced options
    theme_advanced_buttons1 : "code,|,bold,italic,|,bullist,numlist,|,link,unlink",

    // Theme options
    //theme_advanced_buttons1 : "cut,copy,paste,pastetext,pasteword,|,search,replace,|,undo,redo,|,hr,removeformat,|,charmap,emotions,media",
    //theme_advanced_buttons2 : "code,|,bold,italic,underline,strikethrough,sub,sup,|,formatselect,fontselect,fontsizeselect",
    //theme_advanced_buttons3 : "justifyleft,justifycenter,justifyright,justifyfull,|,bullist,numlist,|,outdent,indent,blockquote,|,link,unlink,anchor,image,|,forecolor,backcolor",
    //theme_advanced_buttons4 : "tablecontrols",

    theme_advanced_toolbar_location : "top",
    theme_advanced_toolbar_align : "left",
    theme_advanced_statusbar_location : "bottom",
    theme_advanced_resizing : true,

    // Example content CSS (should be your site CSS)
    //content_css : "css/content.css",

    // Drop lists for link/image/media/template dialogs
    template_external_list_url : "lists/template_list.js",
    external_link_list_url : "lists/link_list.js",
    external_image_list_url : "lists/image_list.js",
    media_external_list_url : "lists/media_list.js"
});



/////
///// enable the widgets for startdate and expiration date
/////

$('input[name="expires"]').datepicker({
    dateFormat: 'yy-mm-dd'
});

$('#expires_never').click(function () {
    $('input[name="expires"]').val('');
});

$('input[name="startdate"]').datepicker({
    dateFormat: 'yy-mm-dd'
});

$('#startdate_today').click(function () {
    var today = new Date().yyyymmdd();
    $('input[name="startdate"]').val(today);
});


/////
///// enable various buttons and clicks
/////

// geocode submit button
$('#geocode_button').click(function () {
    var address = $('#geocode_text').val();
    geocodeAndZoomContributorMap(MAP, address);
});

// waypoint Add button; pick the map's center, create a marker, populate the text fields, make rough route calculation
$('.wpadd').click(function () {
    var row    = $(this).closest('li');
    var wpid   = row.prop('id');

    // the marker will load from the text fields; if the fields currently have no value, use the map center
    var lat = parseFloat( row.find('.lat').val() );
    var lng = parseFloat( row.find('.lng').val() );
    if (!lat || !lng) {
        var center = MAP.getCenter();
        row.find('.lat').val(center.lat);
        row.find('.lng').val(center.lng);
    }

    // add the marker, and its drag handler to update the text box
    if (! MARKERS[wpid]) {
        var lat    = parseFloat( row.find('.lat').val() );
        var lng    = parseFloat( row.find('.lng').val() );
        var center = new L.LatLng(lat,lng);
        var icon   = ICONS[wpid];

        MARKERS[wpid] = new L.Marker(center, { clickable:true, draggable:true, icon:icon });
        MARKERS[wpid].wpid = wpid;
        MAP.addLayer(MARKERS[wpid]);

        MARKERS[wpid].on('dragend', function (event) {
            var latlng = this.getLatLng();
            $('#' + this.wpid).find('.lat').val(latlng.lat);
            $('#' + this.wpid).find('.lng').val(latlng.lng);
            generateRoughCut();
        });
    }

    // recalculate the rough cut
    generateRoughCut();

    // hide this button, show the opposite
    $(this).hide();
    $(this).siblings('.wpremove').show();
});

// waypoint Remove button; remove the marker, clear the text fields, make rough route calculation
$('.wpremove').click(function () {
    var row  = $(this).closest('li');
    var wpid = row.prop('id');

    // clear the text fields
    row.find('.lat').val(0);
    row.find('.lng').val(0);

    // remove the marker
    if (MARKERS[wpid]) {
        MAP.removeLayer(MARKERS[wpid]);
        MARKERS[wpid] = null;
    }

    // recalculate the rough cut
    generateRoughCut();

    // hide this button, show the opposite
    $(this).hide();
    $(this).siblings('.wpadd').show();
});

// Recalculate button: fetches a route from the server, overwreites MULTILINESTRING, draws it onto the map
$('#recalculate_button').click(function () {
    // load up a list of the waypoints, really a pair of lists: lat,lat,lat & lng,lng,lng
    var lats = [];
    var lngs = [];
    $('#waypoints .waypoint').each(function () {
        var lat = parseFloat( $(this).find('.lat').val() );
        var lng = parseFloat( $(this).find('.lng').val() );
        if (lat && lng) {
            lats[lats.length] = lat;
            lngs[lngs.length] = lng;
        }
    });

    // a quick check: must be at least 2 waypoints
    if (lats.length < 2 || lngs.length < 2) return alert("Need at least 2 points.");

    // if chosen, close up the loop by adding the first WP as the last WP
    var closed = parseInt( $('[name="closedloop"]').val() );
    if (closed) {
        lats[lats.length] = lats[0];
        lngs[lngs.length] = lngs[0];
    }

    // visual effects: remove the plotted route
    if (DIRECTIONS_LINE) MAP.removeLayer(DIRECTIONS_LINE);

    // visual effects: empty the steps/directions list
    $('#directions').empty();

    // visual effects: disable the button
    var button = $(this);
    button.val( button.attr('value0') );
    button.attr("disabled", "disabled");

    // visual effects: blank the elevation profile picture
    $('#elevation_profile').prop('src','<?= ssl_url('static/common/blank.png') ?>');

    // visual effects: blank the totals
    $('#distance_feet').html('');
    $('#distancetext').html('');
    $('#duration_hike').html('');
    $('#durationtext_hike').html('');
    $('#duration_bike').html('');
    $('#durationtext_bike').html('');
    $('#duration_bridle').html('');
    $('#durationtext_bridle').html('');

    $('input[name="hike"]').val('');
    $('input[name="bike"]').val('');
    $('input[name="bridle"]').val('');
    $('input[name="difficulty"]').val('');
    $('input[name="paved"]').val('');

    // GET from the server a route covering these waypoints
    var params = {};
    params.lats           = lats.join(",");
    params.lngs           = lngs.join(",");
    params.terrain_filter = $('select[name="terrain_filter"]').val();
    params.trim_spurs     = $('select[name="trim_spurs"]').val();
    $.get('../../ajax/routewaypoints', params, function (reply) {
        // re-enable the button
        button.val( button.attr('value1') );
        button.removeAttr("disabled");

        // warn the user of any problems, pass it on to next-stage handling
        // in this case, an error is not fatal and we continue anyway if we have WKT representing at least a partial route
        if (reply.error) alert(reply.error);
        if (! reply.wkt) return;
        renderRoute(reply);
    }, 'json');
});


// random loop generator
$('#random_button').click(function () {
    // fetch Waypoint 0 and bail if it's not set
    var wp0lat = parseFloat( $('#wp0 .lat').val() );
    var wp0lng = parseFloat( $('#wp0 .lng').val() );
    if (! wp0lat || ! wp0lng ) return alert("Pan and center the map and place Waypoint 0 to define your start.");

    // clear the existing waypoints
    $('.wpremove:visible').click();

    // visual effects: disable the button
    var button = $(this);
    button.val( button.attr('value0') );
    button.attr("disabled", "disabled");

    // get the center and radius, GET them to the server
    var center = MAP.getCenter();
    var miles  = $('#random_miles').val();
    var closed = parseInt( $('[name="closedloop"]').val() );
    var filter = $('select[name="terrain_filter"]').val();
    var params = { lat:wp0lat, lng:wp0lng, miles:miles, closed:closed, filter:filter };
    $.get('../../ajax/randomwaypoints', params, function (reply) {
        // re-enable the button
        button.val( button.attr('value1') );
        button.removeAttr("disabled");

        if (! reply.length) return alert(reply);

        // the return is an array of waypoint objects: WP#, lat, lng
        // load them into the corresponding WP boxes
        for (var i=0, l=reply.length; i<l; i++) {
            var div = $('#wp' + reply[i].wp );
            div.find('.lat').val( reply[i].lat );
            div.find('.lng').val( reply[i].lng );
            div.find('.wpadd').click();
        }
    }, 'json');
});

// Load the loop
loadLoop();

// end of window.load callback
});


/////
///// if there's a loop, a technique for loading the existing loop into the waypoint boxes and the map
///// if not, simply hide the 'remove' buttons because there's nothing yet and we're already done
/////
function loadLoop() {
    // phase 1: lay down markers for any waypoints that are populated
    $('#waypoints .waypoint').each(function () {
        // the waypoint's lat/lng are already loaded into the text fields
        var lat = parseFloat( $(this).find('.lat').val() );
        var lng = parseFloat( $(this).find('.lng').val() );

        // click either the Add or Remove button; their actions will show/hide markers, show/hide buttons, et cetera
        if (lat && lng) {
            $(this).find('.wpadd').click();
        } else {
            $(this).find('.wpremove').click();
        }
    });

    // phase 2: zoom to the collected extent of the markers
    zoomToMarkersExtent();

    // phase 3: load the saved geometry (if any), the rough cut (marker-to-marker segments), and the elevation profile
    generateRoughCut();
    var wkt = $('input[name="wkt"]').val();
    if (wkt) renderWKTtoMap(wkt);
    //var elev = $('input[name="elevation_profile"]').val();
    //if (elev) renderElevationProfile(elev);
    // phase 4: load the directions
    renderDirections(<?= $loop ? $loop->steps : '' ?>);
}


function zoomToMarkersExtent() {
    var extent = [];
    for (var wpid in MARKERS) {
        if (MARKERS[wpid]) extent[extent.length] = MARKERS[wpid].getLatLng();
    }
    if (extent.length) MAP.fitBounds( new L.LatLngBounds(extent) );
}

function generateRoughCut() {
    if (ROUGHCUT_LINE) {
        MAP.removeLayer(ROUGHCUT_LINE);
        ROUGHCUT_LINE = null;
    }

    var latlngs = [];
    $('#waypoints .waypoint').each(function () {
        var lat = parseFloat( $(this).find('.lat').val() );
        var lng = parseFloat( $(this).find('.lng').val() );
        if (lat && lng) latlngs[latlngs.length] = new L.LatLng(lat,lng);
    });

    if (latlngs.length >= 2) {
        ROUGHCUT_LINE = new L.MultiPolyline([latlngs], ROUGHCUT_LINE_STYLE);
        MAP.addLayer(ROUGHCUT_LINE);
    }
}

function renderRoute(routestruct) {
    // load the attributes and totals into the text boxes
    $('#distance_feet').html(routestruct.totals.distance_feet);
    $('#distancetext').html(routestruct.totals.distancetext);
    $('#duration_hike').html(routestruct.totals.duration_hike);
    $('#duration_bike').html(routestruct.totals.duration_bike);
    $('#duration_bridle').html(routestruct.totals.duration_bridle);
    $('#durationtext_hike').html(routestruct.totals.durationtext_hike);
    $('#durationtext_bike').html(routestruct.totals.durationtext_bike);
    $('#durationtext_bridle').html(routestruct.totals.durationtext_bridle);

    $('input[name="hike"]').val(routestruct.use_hike);
    $('input[name="bike"]').val(routestruct.use_bike);
    $('input[name="bridle"]').val(routestruct.use_bridle);
    $('input[name="mountainbike"]').val(routestruct.use_mountainbike);
    $('input[name="difficulty"]').val(routestruct.difficulty);
    $('input[name="paved"]').val(routestruct.paved);

    // parse the bbox and zoom to it
    var bbox = WSENtoBounds(routestruct.bounds.west,routestruct.bounds.south,routestruct.bounds.east,routestruct.bounds.north);
    MAP.fitBounds(bbox);

    // save the WKT to the hidden textarea, then render the represented geometry to map
    $('input[name="wkt"]').val(routestruct.wkt);
    renderWKTtoMap(routestruct.wkt);

    // save the elevation profile in serialized form to the form, so it can be saved to the server later
    var elev = [];
    for (var vi=0, vl=routestruct.elevationprofile.length; vi<vl; vi++) {
        var vpoint = routestruct.elevationprofile[vi];
        elev[elev.length] = vpoint.x + ' ' + vpoint.y;
    }
    elev = elev.join(",");
    $('input[name="elevation_profile"]').val(elev);
    renderElevationProfile(elev);

    // load the directions into a set of text fields
    renderDirections(routestruct.steps);
}


function renderWKTtoMap(wkt) {
    // remove the existing route line from the map
    if (DIRECTIONS_LINE) { MAP.removeLayer(DIRECTIONS_LINE); DIRECTIONS_LINE = null; }

    // parse the WKT to get a new line, add the new line to the map
    var parser = new Wkt.Wkt();
    parser.read(wkt);
    DIRECTIONS_LINE = parser.toObject(DIRECTIONS_LINE_STYLE);
    MAP.addLayer(DIRECTIONS_LINE);
}

function renderElevationProfile(vpoints) {
    // the vertices have horizontal and vertical info (feet and elev). make a pair of arrays
    var x = [];
    var y = [];
    vpoints = vpoints.split(",");
    for (var i=0, l=vpoints.length; i<l; i++) {
        var xy = vpoints[i].split(" ");
        x[x.length] = xy[0];
        y[y.length] = xy[1];
    }
    x = x.join(',');
    y = y.join(',');

    $('#elevation_profile').prop('src','<?= ssl_url('static/common/blank.png') ?>');
    $.post('../../ajax/elevationprofilebysegments', { 'x':x, 'y':y }, function (url) {
        if (url.indexOf('http') != 0) return alert(url);
        $('#elevation_profile').prop('src',url);
        $('input[name="elevation_profile_image"]').val(url);
    });
}

function renderDirections(steps) {
    if (! steps) return;

    var target = $('#directions');
    target.empty();
    target.append($('<tr> <th>#</th> <th>Text</th> <th>Dist</th> <th>Hike</th> <th>Bike</th> <th>Bridle</th> </tr>'));

    for (var i=0, l=steps.length; i<l; i++) {
        var step = steps[i];
        //console.log(step);
        var row = $('<tr></tr>');
        row.append($('<td></td>').append( $('<span></span>').prop('id','stepnumber').html(step.stepnumber) ));
        row.append($('<td></td>').append( $('<span></span>').prop('id','text').html(step.text) ));
        row.append($('<td></td>').append( $('<span></span>').prop('id','distance').html(step.distance) ));
        row.append($('<td></td>').append( $('<span></span>').prop('id','timehike').html(step.timehike) ));
        row.append($('<td></td>').append( $('<span></span>').prop('id','timebike').html(step.timebike) ));
        row.append($('<td></td>').append( $('<span></span>').prop('id','timebridle').html(step.timebridle) ));
        target.append(row);
    }
}

// Since the embedded map is initially hidden in an inactive tab,
// we have to re-initialize the size/zoom when we show it for the
// first time.
$('body').on('shown.bs.tab', function (e) {
    if ($(e.target).attr("href") == '#waypoints-route') {
        if (MAP._shown !== true) {
            MAP.invalidateSize(false);
            MAP.fitBounds(MAX_BOUNDS);
            zoomToMarkersExtent();
            MAP._shown = true;
        }
    }
});

</script>


<form class="form-horizontal" id="loopform" method="post" action="<?= ssl_url("contributors/saveloop/") ?>">

<input type="hidden" name="id" value="<?= $loop ? $loop->id : 0 ?>" />
<input type="hidden" name="wkt" value="<?= $loop ? $loop->wkt : '' ?>" />
<input type="hidden" name="elevation_profile" value="<?= $loop ? $loop->elevation_profile : '' ?>" />
<input type="hidden" name="elevation_profile_image" value="<?= $loop ? ssl_url("static/photos/loops/{$loop->id}.jpg") : '' ?>" />

<ul class="nav nav-tabs">
  <li class="active"><a data-toggle="tab" href="#basic-info">Basic Information</a></li>
  <li><a data-toggle="tab" href="#waypoints-route">Waypoints &amp; Route</a></li>
  <li><a data-toggle="tab" href="#directions-profile">Directions &amp; Profile</a></li>
</ul>

<div class="tab-content">

<!-- Basic Information (tab) -->
<div id="basic-info" class="tab-pane active">
    <h3>Basic Information</h3>

    <!-- Basic Information (col) -->
    <div class="col-md-6">

        <div class="form-group">
            <label class="control-label col-sm-3">Name:</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="name" maxlength="200" value="<?= $loop ? htmlspecialchars($loop->name) : '- Untitled Loop' ?>" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Description:</label>
            <div class="col-sm-8">
                <textarea class="form-control" name="description" style="height:5em">
                    <?= $loop ? htmlspecialchars($loop->description) : '' ?>
                </textarea>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Publication</label>
            <div class="col-sm-8">
                <select class="form-control" name="status">
                    <option <?= $loop ? ($loop->status=='New' ? 'selected="true"' : '') : '' ?> value="New">New</option>
                    <option <?= $loop ? ($loop->status=='In Progress' ? 'selected="true"' : '') : '' ?> value="In Progress">In Progress</option>
                    <?php if ($this->loggedin['admin']) { ?>
                    <option <?= $loop ? ($loop->status=='Published' ? 'selected="true"' : '') : '' ?> value="Published">Published</option>
                    <?php } ?>
                    <option <?= $loop ? ($loop->status=='Expired' ? 'selected="true"' : '') : '' ?> value="Published">Expired</option>
                </select>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Start date:</label>
            <div class="col-sm-8">
                <input type="text" name="startdate" size="10" maxlength="10" value="<?= $loop ? $loop->startdate : date('Y-m-d') ?>" />
                <span class="btn btn-sm btn-default" id="startdate_today">today</span>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Expiration date:</label>
            <div class="col-sm-8">
                <input type="text" name="expires" size="10" maxlength="10" value="<?= $loop ? $loop->expires : '' ?>" />
                <span class="btn btn-sm btn-default" id="expires_never">never</span>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Repeat:</label>
            <div class="col-sm-8">
                <select class="form-control" name="annual">
                    <option value="0" <?= ($loop and $loop->annual) ? '' : 'selected="true"' ?> >No, do not automatically re-enable</option>
                    <option value="1" <?= ($loop and $loop->annual) ? 'selected="true"' : '' ?> >Yes, re-enable this loop each year</option>
                </select>
                <p class="help-block">If this event expires, should it be re-enabled on the starting date the following year?<br/>
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Source:</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="source" maxlength="100" value="<?= $loop ? htmlspecialchars($loop->source) : '' ?>" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Edited by:</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="editedby" maxlength="100" value="<?= $loop ? htmlspecialchars($loop->editedby) : '' ?>" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Hiking:</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="hike" value="<?= $loop ? $loop->hike : '' ?>" readonly="readonly" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Bikes:</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="bike" value="<?= $loop ? $loop->bike : '' ?>" readonly="readonly" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Equestrian:</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="bridle" value="<?= $loop ? $loop->bridle : '' ?>" readonly="readonly" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Mountain Biking:</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="mountainbike" value="<?= $loop ? $loop->mountainbike : '' ?>" readonly="readonly" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Paved:</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="paved" value="<?= $loop ? $loop->paved : '' ?>" readonly="readonly" />
            </div>
        </div>

        <div class="form-group">
            <label class="control-label col-sm-3">Difficulty (bikes):</label>
            <div class="col-sm-8">
                <input class="form-control" type="text" name="dificulty" value="<?= $loop ? $loop->difficulty : '' ?>" readonly="readonly" />
            </div>
        </div>

    </div>
    <!-- /Basic Information (col) -->

</div>
<!-- /Basic Information (tab) -->


<div id="waypoints-route" class="tab-pane">
    <h3>Waypoints &amp; Route</h3>

    <!-- Waypoints Map - Left side (col) -->
    <div class="col-md-6">

        <div id="map_canvas" style="width:100%; height:5in; margin: 1em 0;"></div>

        <div class="form-group">
            <label class="control-label col-sm-4">Search:</label>
            <div class="col-sm-8 form-inline">
                <input class="form-control" type="text" id="geocode_text" />
                <input class="btn btn-sm btn-default" type="button" id="geocode_button" value="Go &gt;" />
                <p class="help-block">Search for an address or landmark</p>
            </div>
        </div>

    </div>
    <!-- /Waypoints Map - Left side (col) -->

    <!-- Waypoints Right side (col) -->
    <div class="col-md-6">

        <!-- Waypoints List (row) -->
        <div class="row">

            <h4>Waypoints <a href="#waypointInstructions" data-toggle="collapse" aria-expanded="false" aria-controls="waypointInstructions"><span class="glyphicon glyphicon-question-sign"></span></a></h4>

            <div class="collapse well well-sm" id="waypointInstructions">
                <ol>
                    <li>Zoom the map to the general area of your desired loop.</li>
                    <li>Add the first and last waypoints, then click <em>Recalculate</em> to get an idea of where the system would route you. The system will automatically &quot;close the loop&quot; back     to      the first waypoint.</li>
                    <li>To fine-tune the route: add waypoints in between and <em>Recalculate</em>.</li>
                </ol>
            </div>

            <ul id="waypoints" class="list-group">
            <?php for ($i=0; $i<10; $i++) : ?>
                <li class="list-group-item waypoint" id="wp<?= $i ?>">
                    <label class="control-label"><?= $i ?>:</label>
                    <input type="text" class="lat" readonly="readonly" style="border: none;" id="wp<?= $i ?>lat" name="wp<?= $i ?>lat" value="<?= $loop ? $loop->{"wp${i}lat"} : '0' ?>" />
                    <input type="text" class="lng" readonly="readonly" style="border: none;" id="wp<?= $i ?>lng" name="wp<?= $i ?>lng" value="<?= $loop ? $loop->{"wp${i}lng"} : '0' ?>" />
                    <span class="btn btn-sm btn-default wpadd pull-right" wp="wp<?= $i ?>">add</span>
                    <span class="btn btn-sm btn-default wpremove pull-right" wp="wp<?= $i ?>">remove</span>
                </li>
            <?php endfor; ?>
            </ul>

        </div>
        <!-- /Waypoints List (row) -->

        <!-- Route Options (row) -->
        <div class="row">

            <h4>Route Options</h4>

            <div class="form-group">
                <label class="control-label col-sm-3">Loop:</label>
                <div class="col-sm-6">
                    <select class="form-control" name="closedloop">
                        <option value="1" <?= $loop ? ($loop->closedloop=='1' ? 'selected="true"' : '') : '' ?> >Return to start to form a closed loop</option>
                        <option value="0" <?= $loop ? ($loop->closedloop=='0' ? 'selected="true"' : '') : '' ?> >End at the final waypoint, not a closed loop</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-3">Filter:</label>
                <div class="col-sm-6">
                    <select class="form-control" name="terrain_filter">
                        <option value="hike" <?= $loop ? ($loop->terrain_filter=='hike' ? 'selected="true"' : '') : '' ?> >Hiking trails</option>
                        <option value="hike_paved" <?= $loop ? ($loop->terrain_filter=='hike_paved' ? 'selected="true"' : '') : '' ?> >Hiking trails, paved</option>
                        <option value="hike_unpaved" <?= $loop ? ($loop->terrain_filter=='hike_unpaved' ? 'selected="true"' : '') : '' ?> >Hiking trails, unpaved</option>
                        <option value="bike" <?= $loop ? ($loop->terrain_filter=='bike' ? 'selected="true"' : '') : '' ?> >Bicycle trails</option>
                        <option value="bike_novice" <?= $loop ? ($loop->terrain_filter=='bike_novice' ? 'selected="true"' : '') : '' ?> >Bicycle trails, novice</option>
                        <option value="bike_beginner" <?= $loop ? ($loop->terrain_filter=='bike_beginner' ? 'selected="true"' : '') : '' ?> >Bicycle trails &amp; roads, beginner</option>
                        <option value="bike_intermediate" <?= $loop ? ($loop->terrain_filter=='bike_intermediate' ? 'selected="true"' : '') : '' ?> >Bicycle trails &amp; roads, intermediate</option>
                        <option value="bike_advanced" <?= $loop ? ($loop->terrain_filter=='bike_advanced' ? 'selected="true"' : '') : '' ?> >Bicycle trails &amp; roads, advanced</option>
                        <option value="bridle" <?= $loop ? ($loop->terrain_filter=='bridle' ? 'selected="true"' : '') : '' ?> >Equestrian trails</option>
                        <option value="bridle_paved" <?= $loop ? ($loop->terrain_filter=='bridle_paved' ? 'selected="true"' : '') : '' ?> >Equestrian trails, paved</option>
                        <option value="bridle_unpaved" <?= $loop ? ($loop->terrain_filter=='bridle_unpaved' ? 'selected="true"' : '') : '' ?> >Equestrian trails, unpaved</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-3">Trim:</label>
                <div class="col-sm-6">
                    <select class="form-control" name="trim_spurs">
                        <option value="">Do not trim off spurs</option>
                        <option value="trim">Trim off spurs</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-6">
                    <input type="button" id="recalculate_button" value="Recalculate" value0="One moment..." value1="Recalculate" class="btn btn-default" />
                </div>
            </div>

        </div>
        <!-- /Route Options (row) -->

        <!-- Random Loops (row) -->
        <div class="row">

            <h4>Generate Random Loop <a href="#randomLoopInstructions" data-toggle="collapse" aria-expanded="false" aria-controls="randomLoopInstructions"><span class="glyphicon glyphicon-question-sign"></span></a></h4>

            <div class="collapse well well-sm" id="randomLoopInstructions">
                <ol>
                    <li>Center the map and place Waypoint 0 to indicate a starting point.</li>
                    <li>Select trail settings above: the trail types filter and whether to close the loop.</li>
                    <li>Select a desired route length below.</li>
                    <li>Click the Generate Random button to have it select some waypoints and place markers.</li>
                    <li>Click Generate Random again to try again, click the Recalculate button to calculate a route, or adjust the markers to fine tune the output.</li>
                </ol>
            </div>

            <div class="form-group">
                <label class="control-label col-sm-3">Route length:</label>
                <div class="col-sm-6">
                    <select class="form-control" id="random_miles">
                        <option value="5">5 miles</option>
                        <option value="10">10 miles</option>
                        <option value="15">15 miles</option>
                        <option value="20">20 miles</option>
                        <option value="25">25 miles</option>
                        <option value="30">30 miles</option>
                    </select>
                </div>
            </div>

            <div class="form-group">
                <div class="col-sm-offset-3 col-sm-6">
                    <input type="button" id="random_button" value="Generate Random" value0="One moment..." value1="Generate Random" class="btn btn-default" />
                </div>
            </div>

        </div>
        <!-- /Random Loops (row) -->

    </div>
    <!-- Waypoints Right side (col) -->

</div>
<!-- /Waypoints & Route (tab) -->



<!-- /Directions & Profile (tab) -->
<div id="directions-profile" class="tab-pane">

    <h3>Directions &amp; Profile</h3>

    <!-- Directions (col) -->
    <div class="col-md-6">

    <h4>Directions</h4>

        <div class="row">
             <table class="table table-striped table-condensed" id="directions" style="font-size:90%;">
             </table>
        </div>

    </div>
    <!-- /Directions (col) -->

    <!-- Distance (col) -->
    <div class="col-md-6">

        <h4>Distance</h4>

        <div class="row">
            <label class="col-sm-4">Length:</label>
            <div class="col-sm-8">
                <span id="distancetext"><?= $loop ? $loop->distancetext : 0 ?></span> (<span id="distance_feet"><?= $loop ? $loop->distance_feet : 0 ?></span> ft)
            </div>
        </div>

        <div class="row">
            <label class="col-sm-4">Duration, hike:</label>
            <div class="col-sm-8">
                <span id="durationtext_hike"><?= $loop ? $loop->durationtext_hike : 0 ?></span> (<span id="duration_hike"><?= $loop ? $loop->duration_hike : 0 ?></span> sec)
            </div>
        </div>

        <div class="row">
            <label class="col-sm-4">Duration, bicycle:</label>
            <div class="col-sm-8">
                <span id="durationtext_bike"><?= $loop ? $loop->durationtext_bike : 0 ?></span> (<span id="duration_bike"><?= $loop ? $loop->duration_bike : 0 ?></span> sec)
            </div>
        </div>

        <div class="row">
            <label class="col-sm-4">Duration, equestrian:</label>
            <div class="col-sm-8">
                <span id="durationtext_bridle"><?= $loop ? $loop->durationtext_bridle : 0 ?></span> (<span id="duration_bridle"><?= $loop ? $loop->duration_bridle : 0 ?></span> sec)
            </div>
        </div>

    </div>
    <!-- /Distance (col) -->

    <!-- Elevation Profile (col) -->
    <div class="col-md-6">

        <h4>Elevation Profile</h4>

        <div class="form-group">
            <div class="col-sm-6">
                <img src="<?= $loop ? ssl_url("static/photos/loops/{$loop->id}.jpg") : ssl_url('static/common/blank.png') ?>" id="elevation_profile" />
            </div>
        </div>

    </div>
    <!-- /Elevation Profile -->

</div>
<!-- /Directions & Profile (tab) -->


</div>
<!-- /Tabs content -->

<!-- Submit Button -->
<div class="form-group">
    <div class="col-md-12">
        <input class="btn btn-primary" type="submit" value="Save Changes" />
    </div>
</div>
<!-- /Submit Button -->

</form>


<!-- Delete Button -->
<?php if ($loop) { ?>
<form class="form-horizontal" id="deleteform" method="post" action="<?= ssl_url("contributors/deleteloop/") ?>" onSubmit="return confirm('Really delete this loop?');">
    <input type="hidden" name="id" value="<?= $loop->id ?>" />
    <div class="form-group">
        <div class="col-sm-4">
            <input class="btn btn-primary" type="submit" value="Delete Loop" />
        </div>
    </div>
</form>
<?php } ?>
<!-- /Delete Button -->